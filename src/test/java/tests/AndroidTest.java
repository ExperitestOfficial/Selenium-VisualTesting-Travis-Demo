package tests;
/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import org.openqa.selenium.*;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;

import io.appium.java_client.android.AndroidDriver;
import io.appium.java_client.android.AndroidElement;
import io.appium.java_client.remote.MobileBrowserType;
import io.appium.java_client.remote.MobileCapabilityType;

import java.net.MalformedURLException;
import java.net.URL;


public class AndroidTest {

    private static final String CLOUD_ACCESS_KEY = System.getenv("CLOUD_ACCESS_KEY");
    private static final String VISUAL_ACCESS_KEY = System.getenv("VISUAL_ACCESS_KEY");
    protected AndroidDriver<AndroidElement> driver = null;
    private DesiredCapabilities dc = new DesiredCapabilities().chrome();

    @Parameters({"UDID"})
    @BeforeMethod
    public void setUp(String UDID) throws MalformedURLException {
        //dc.setCapability("deviceQuery", "@os='android' and @category='PHONE'");
    	//dc.setCapability(MobileCapabilityType.UDID, "00db17d862b2bd18");
    	dc.setCapability(MobileCapabilityType.UDID, UDID);
        dc.setCapability("accessKey", CLOUD_ACCESS_KEY);
        dc.setCapability("testName", "Travis Visual Testing Demo - Android");
        dc.setBrowserName(MobileBrowserType.CHROME);
        //dc.setCapability("seleniumScreenshot", true);
        driver = new AndroidDriver<>(new URL("https://sales.experitest.com:443/wd/hub"), dc);
    }


    @Test
    public void testExperitest() throws InterruptedException {
        driver.get("https://github.com/login");
        //new WebDriverWait(driver, 10).until(ExpectedConditions.presenceOfElementLocated(By.xpath("//*[@nodeName='BUTTON' and (./preceding-sibling::* | ./following-sibling::*)[@text]]")));
        Thread.sleep(3000);
        
        in.Visual.setAccessKey(VISUAL_ACCESS_KEY); 
        boolean result  = in.Visual.verify(driver, "github_login_page");
        System.out.println("Report Link: " + in.Visual.getLastResultUrl());
    }

    @AfterMethod
    public void tearDown() {
        driver.quit();
    }

}